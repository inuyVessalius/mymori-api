
name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11.0.4' 
      - name: Grant execute permission for docker_init
        run: chmod +x ./docker_init.sh
      - name: Execute docker_init
        run: ./docker_init.sh
      # - uses: eskatos/gradle-command-action@v1
      #   with:
      #     arguments: build
      #     gradle-version: 6.8
      # - uses: eskatos/gradle-command-action@v1
      #   with:
      #     arguments: test
      #     gradle-version: 6.8
      - name: Build with Gradle
        run: gradle build
      - name: Test with Gradle
        run: gradle test
